// <auto-generated />
using System;
using JsonApiDotNetCoreExample.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace JsonApiDotNetCoreExample.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180717134637_ResourceSeparation")]
    partial class ResourceSeparation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.CamelCasedModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompoundAttr");

                    b.HasKey("Id");

                    b.ToTable("CamelCasedModels");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.Entities.CourseEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DepartmentId")
                        .HasColumnName("department-id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasMaxLength(4000);

                    b.Property<int>("Number")
                        .HasColumnName("number");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.Entities.DepartmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.Entities.RegistrationEntity", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnName("course-id");

                    b.Property<int>("StudentId")
                        .HasColumnName("student-id");

                    b.HasKey("CourseId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("Registration");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.Entities.StudentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasColumnName("address");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first-name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last-name")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.NonJsonApiResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("NonJsonApiResources");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int?>("UnIncludeableItemId");

                    b.HasKey("Id");

                    b.HasIndex("UnIncludeableItemId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("AchievedDate");

                    b.Property<int?>("AssigneeId");

                    b.Property<Guid?>("CollectionId");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description");

                    b.Property<Guid>("GuidProperty");

                    b.Property<long>("Ordinal");

                    b.Property<int?>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("CollectionId");

                    b.HasIndex("OwnerId");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.TodoItemCollection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("TodoItemCollections");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.Article", b =>
                {
                    b.HasOne("JsonApiDotNetCoreExample.Models.Author", "Author")
                        .WithMany("Articles")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.Entities.CourseEntity", b =>
                {
                    b.HasOne("JsonApiDotNetCoreExample.Models.Entities.DepartmentEntity", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.Entities.RegistrationEntity", b =>
                {
                    b.HasOne("JsonApiDotNetCoreExample.Models.Entities.CourseEntity", "Course")
                        .WithMany("Registrations")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JsonApiDotNetCoreExample.Models.Entities.StudentEntity", "Student")
                        .WithMany("Registrations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.Person", b =>
                {
                    b.HasOne("JsonApiDotNetCoreExample.Models.TodoItem", "UnIncludeableItem")
                        .WithMany()
                        .HasForeignKey("UnIncludeableItemId");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.TodoItem", b =>
                {
                    b.HasOne("JsonApiDotNetCoreExample.Models.Person", "Assignee")
                        .WithMany("AssignedTodoItems")
                        .HasForeignKey("AssigneeId");

                    b.HasOne("JsonApiDotNetCoreExample.Models.TodoItemCollection", "Collection")
                        .WithMany("TodoItems")
                        .HasForeignKey("CollectionId");

                    b.HasOne("JsonApiDotNetCoreExample.Models.Person", "Owner")
                        .WithMany("TodoItems")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("JsonApiDotNetCoreExample.Models.TodoItemCollection", b =>
                {
                    b.HasOne("JsonApiDotNetCoreExample.Models.Person", "Owner")
                        .WithMany("TodoItemCollections")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
